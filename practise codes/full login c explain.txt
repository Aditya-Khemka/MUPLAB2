#mirror code explaination for username and password login in c 
#include <stdio.h>
#include <string.h>

#define MAX_USER 10
#define MAX_PASS 8

char storedUser[] = "admin";
char storedPass[] = "secret";

void readInput(char *buffer, int max);
void readPassword(char *buffer, int max);
int compareStrings(const char *str1, const char *str2);

int main() {
    char username[MAX_USER + 1];
    char password[MAX_PASS + 1];

    // Prompt for Username
    printf("Enter User Name: ");
    readInput(username, MAX_USER);

    // Validate Username
    if (compareStrings(username, storedUser) != 0) {
        printf("\nAccess Denied!\n");
        return 1;
    }

    // Prompt for Password
    printf("\nEnter Password: ");
    readPassword(password, MAX_PASS);

    // Validate Password
    if (compareStrings(password, storedPass) != 0) {
        printf("\nAccess Denied!\n");
        return 1;
    }

    // Access Granted
    printf("\nHello, %s\n", username);
    return 0;
}

// Function to Read Visible Input
void readInput(char *buffer, int max) {
    fgets(buffer, max + 1, stdin);
    buffer[strcspn(buffer, "\n")] = 0; // Remove newline
}

// Function to Read Hidden Password Input
void readPassword(char *buffer, int max) {
    int i = 0;
    while (i < max) {
        char c = getchar();
        if (c == '\n') break; // Stop on Enter
        buffer[i++] = c;
        printf("*");
    }
    buffer[i] = '\0'; // Null-terminate
}

// Function to Compare Strings (Mimics LODSB & SCASB)
int compareStrings(const char *str1, const char *str2) {
    while (*str1 && *str1 == *str2) {
        str1++;
        str2++;
    }
    return (*str1 - *str2);
}
